//
// Add missing POSIX header file
//
module core.sys.posix.langinfo;

import core.sys.posix.locale;

version( linux )
{
    alias int nl_item;

    private @safe pure nothrow nl_item _NL_ITEM(int category, int index)
    {
        return (category << 16) | index;
    }

    enum
    {
        ABDAY_1 = _NL_ITEM(LC_TIME, 0),
        ABDAY_2,
        ABDAY_3,
        ABDAY_4,
        ABDAY_5,
        ABDAY_6,
        ABDAY_7,
        DAY_1,
        DAY_2,
        DAY_3,
        DAY_4,
        DAY_5,
        DAY_6,
        DAY_7,
        ABMON_1,
        ABMON_2,
        ABMON_3,
        ABMON_4,
        ABMON_5,
        ABMON_6,
        ABMON_7,
        ABMON_8,
        ABMON_9,
        ABMON_10,
        ABMON_11,
        ABMON_12,
        MON_1,
        MON_2,
        MON_3,
        MON_4,
        MON_5,
        MON_6,
        MON_7,
        MON_8,
        MON_9,
        MON_10,
        MON_11,
        MON_12,
        AM_STR,
        PM_STR,
        D_T_FMT,
        D_FMT,
        T_FMT,
        T_FMT_AMPM,
        ERA,
        ERA_YEAR,
        ERA_D_FMT,
        ALT_DIGITS,
        ERA_D_T_FMT,
        ERA_T_FMT,
        _NL_TIME_NUM_ALT_DIGITS,
        _NL_TIME_ERA_NUM_ENTRIES,
        _NL_TIME_ERA_ENTRIES_EB,
        _NL_TIME_ERA_ENTRIES_EL,
        _NL_NUM_LC_TIME,

        _NL_COLLATE_NRULES = _NL_ITEM(LC_COLLATE, 0),
        _NL_COLLATE_RULES,
        _NL_COLLATE_HASH_SIZE,
        _NL_COLLATE_HASH_LAYERS,
        _NL_COLLATE_TABLE_EB,
        _NL_COLLATE_TABLE_EL,
        _NL_COLLATE_UNDEFINED,
        _NL_COLLATE_EXTRA_EB,
        _NL_COLLATE_EXTRA_EL,
        _NL_COLLATE_ELEM_HASH_SIZE,
        _NL_COLLATE_ELEM_HASH_EB,
        _NL_COLLATE_ELEM_HASH_EL,
        _NL_COLLATE_ELEM_STR_POOL,
        _NL_COLLATE_ELEM_VAL_EB,
        _NL_COLLATE_ELEM_VAL_EL,
        _NL_COLLATE_SYMB_HASH_SIZE,
        _NL_COLLATE_SYMB_HASH_EB,
        _NL_COLLATE_SYMB_HASH_EL,
        _NL_COLLATE_SYMB_STR_POOL,
        _NL_COLLATE_SYMB_CLASS_EB,
        _NL_COLLATE_SYMB_CLASS_EL,
        _NL_NUM_LC_COLLATE,

        _NL_CTYPE_CLASS = _NL_ITEM(LC_CTYPE, 0),
        _NL_CTYPE_TOUPPER_EB,
        _NL_CTYPE_TOLOWER_EB,
        _NL_CTYPE_TOUPPER_EL,
        _NL_CTYPE_TOLOWER_EL,
        _NL_CTYPE_CLASS32,
        _NL_CTYPE_NAMES_EB,
        _NL_CTYPE_NAMES_EL,
        _NL_CTYPE_HASH_SIZE,
        _NL_CTYPE_HASH_LAYERS,
        _NL_CTYPE_CLASS_NAMES,
        _NL_CTYPE_MAP_NAMES,
        _NL_CTYPE_WIDTH,
        _NL_CTYPE_MB_CUR_MAX,
        _NL_CTYPE_CODESET_NAME,
        CODESET = _NL_CTYPE_CODESET_NAME,
        _NL_NUM_LC_CTYPE,

        INT_CURR_SYMBOL = _NL_ITEM(LC_MONETARY, 0),
        CURRENCY_SYMBOL,
        CRNCYSTR = CURRENCY_SYMBOL,
        MON_DECIMAL_POINT,
        MON_THOUSANDS_SEP,
        MON_GROUPING,
        POSITIVE_SIGN,
        NEGATIVE_SIGN,
        INT_FRAC_DIGITS,
        FRAC_DIGITS,
        P_CS_PRECEDES,
        P_SEP_BY_SPACE,
        N_CS_PRECEDES,
        N_SEP_BY_SPACE,
        P_SIGN_POSN,
        N_SIGN_POSN,
        _NL_NUM_LC_MONETARY,

        DECIMAL_POINT = _NL_ITEM(LC_NUMERIC, 0),
        RADIXCHAR = DECIMAL_POINT,
        THOUSANDS_SEP,
        THOUSEP = THOUSANDS_SEP,
        GROUPING,
        _NL_NUM_LC_NUMERIC,

        YESEXPR = _NL_ITEM(LC_MESSAGES, 0),
        NOEXPR,
        YESSTR,
        NOSTR,
        _NL_NUM_LC_MESSAGES,

        _NL_NUM
    }
}
else version( OSX )
{
    alias int nl_item;

    enum
    {
        CODESET = 0,
        D_T_FMT,
        D_FMT,
        T_FMT,
        T_FMT_AMPM,
        AM_STR,
        PM_STR,
        DAY_1,
        DAY_2,
        DAY_3,
        DAY_4,
        DAY_5,
        DAY_6,
        DAY_7,
        ABDAY_1,
        ABDAY_2,
        ABDAY_3,
        ABDAY_4,
        ABDAY_5,
        ABDAY_6,
        ABDAY_7,
        MON_1,
        MON_2,
        MON_3,
        MON_4,
        MON_5,
        MON_6,
        MON_7,
        MON_8,
        MON_9,
        MON_10,
        MON_11,
        MON_12,
        ABMON_1,
        ABMON_2,
        ABMON_3,
        ABMON_4,
        ABMON_5,
        ABMON_6,
        ABMON_7,
        ABMON_8,
        ABMON_9,
        ABMON_10,
        ABMON_11,
        ABMON_12,
        ERA,
        ERA_D_FMT,
        ERA_D_T_FMT,
        ERA_T_FMT,
        ALT_DIGITS,
        RADIXCHAR,
        THOUSEP,
        YESEXPR,
        NOEXPR,
        YESSTR,
        NOSTR,
        CRNCYSTR,
        D_MD_ORDER,
    }
}
else version( FreeBSD )
{
    alias int nl_item;

    enum
    {
        CODESET = 0,
        D_T_FMT,
        D_FMT,
        T_FMT,
        T_FMT_AMPM,
        AM_STR,
        PM_STR,
        DAY_1,
        DAY_2,
        DAY_3,
        DAY_4,
        DAY_5,
        DAY_6,
        DAY_7,
        ABDAY_1,
        ABDAY_2,
        ABDAY_3,
        ABDAY_4,
        ABDAY_5,
        ABDAY_6,
        ABDAY_7,
        MON_1,
        MON_2,
        MON_3,
        MON_4,
        MON_5,
        MON_6,
        MON_7,
        MON_8,
        MON_9,
        MON_10,
        MON_11,
        MON_12,
        ABMON_1,
        ABMON_2,
        ABMON_3,
        ABMON_4,
        ABMON_5,
        ABMON_6,
        ABMON_7,
        ABMON_8,
        ABMON_9,
        ABMON_10,
        ABMON_11,
        ABMON_12,
        ERA,
        ERA_D_FMT,
        ERA_D_T_FMT,
        ERA_T_FMT,
        ALT_DIGITS,
        RADIXCHAR,
        THOUSEP,
        YESEXPR,
        NOEXPR,
        YESSTR,
        NOSTR,
        CRNCYSTR,
        D_MD_ORDER,
        ALTMON_1,
        ALTMON_2,
        ALTMON_3,
        ALTMON_4,
        ALTMON_5,
        ALTMON_6,
        ALTMON_7,
        ALTMON_8,
        ALTMON_9,
        ALTMON_10,
        ALTMON_11,
        ALTMON_12,
    }
}
else version( Solaris )
{
    alias int nl_item;

    enum
    {
        DAY_1 = 1,
        DAY_2,
        DAY_3,
        DAY_4,
        DAY_5,
        DAY_6,
        DAY_7,
        ABDAY_1,
        ABDAY_2,
        ABDAY_3,
        ABDAY_4,
        ABDAY_5,
        ABDAY_6,
        ABDAY_7,
        MON_1,
        MON_2,
        MON_3,
        MON_4,
        MON_5,
        MON_6,
        MON_7,
        MON_8,
        MON_9,
        MON_10,
        MON_11,
        MON_12,
        ABMON_1,
        ABMON_2,
        ABMON_3,
        ABMON_4,
        ABMON_5,
        ABMON_6,
        ABMON_7,
        ABMON_8,
        ABMON_9,
        ABMON_10,
        ABMON_11,
        ABMON_12,
        RADIXCHAR,
        THOUSEP,
        YESSTR,
        NOSTR,
        CRNCYSTR,
        D_T_FMT,
        D_FMT,
        T_FMT,
        AM_STR,
        PM_STR,
        CODESET,
        T_FMT_AMPM,
        ERA,
        ERA_D_FMT,
        ERA_D_T_FMT,
        ERA_T_FMT,
        ALT_DIGITS,
        YESEXPR,
        NOEXPR,
        _DATE_FMT,
        MAXSTRMSG,
    }
}
else static assert(0);


extern(C) @system nothrow
{
    char* nl_langinfo(nl_item);
    char* nl_langinfo_l(nl_item, locale_t);
}

